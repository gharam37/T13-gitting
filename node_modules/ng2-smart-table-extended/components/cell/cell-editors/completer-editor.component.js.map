{"version":3,"file":"completer-editor.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/cell/cell-editors/completer-editor.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,YAAY,EAAiB,MAAM,EAAE,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,gBAAgB,EAAE,MAAM,eAAe,CAAC;AAEjD,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAoBjD,IAAa,wBAAwB;IAAS,4CAAa;IAKzD,kCAAqB,gBAAkC;QAAvD,YACE,iBAAO,SACR;QAFoB,sBAAgB,GAAhB,gBAAgB,CAAkB;QAHvD,kBAAY,GAAW,EAAE,CAAC;QAChB,eAAS,GAAG,IAAI,YAAY,EAAO,CAAC;;IAI9C,CAAC;IAED,2CAAQ,GAAR;QACE,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,IAAI,KAAK,WAAY,CAAC,CAAC,CAAC;YACxF,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC;YAC3D,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,UAAU,CAAE,CAAC;YACxG,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAE,MAAM,CAAC,gBAAgB,CAAE,CAAC;QACjE,CAAC;IACH,CAAC;IAED,oDAAiB,GAAjB,UAAmB,IAAmB;QACpC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,EAAE,IAAI,MAAA,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAE,CAAC;QACzD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IACH,+BAAC;AAAD,CAAC,AAtBD,CAA8C,aAAa,GAsB1D;AAnBW;IAAT,MAAM,EAAE;;2DAAqC;AAHnC,wBAAwB;IAlBpC,SAAS,CAAE;QACV,QAAQ,EAAE,kBAAkB;QAC5B,QAAQ,EAAE,47BAcT;KACF,CAAE;qCAMsC,gBAAgB;GAL5C,wBAAwB,CAsBpC;SAtBY,wBAAwB","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CompleterService } from 'ng2-completer';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component( {\n  selector: 'completer-editor',\n  template: `\n    <ng2-completer *ngIf=\"cell.isEditable()\" [(ngModel)]=\"completerStr\"\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || cell.getValue() || 'Start typing...'\"\n                   (selected)=\"onEditedCompleter($event)\">\n    </ng2-completer>\n    <!-- just use regular view logic when cell is not editable-->\n    <div *ngIf=\"!cell.isEditable()\" [ngSwitch]=\"cell.getColumn().type\">\n      <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n      <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n      <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n  `,\n} )\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\n\n  completerStr: string = '';\n  @Output() completed = new EventEmitter<any>();\n\n  constructor( private completerService: CompleterService ) {\n    super();\n  }\n\n  ngOnInit() {\n    if ( this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer' ) {\n      const config = this.cell.getColumn().getConfig().completer;\n      config.dataService = this.completerService.local( config.data, config.searchFields, config.titleField );\n      config.dataService.descriptionField( config.descriptionField );\n    }\n  }\n\n  onEditedCompleter( data: { title: '' } ): boolean {\n    this.cell.newValue = data.title;\n    this.completed.emit( { data, row: this.cell.getRow() } );\n    return false;\n  }\n}\n"]}