{"version":3,"file":"input-editor.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/cell/cell-editors/input-editor.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAoB,SAAS,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAElF,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAyBjD,IAAa,oBAAoB;IAAS,wCAAa;IAYrD;QAAA,YACE,iBAAO,SAER;QAPS,cAAQ,GAAG,IAAI,YAAY,EAAO,CAAC;;IAO7C,CAAC;IAdD,iDAAkB,GAAlB;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,sBAAsB,EAAE,CAAC;QACrE,EAAE,CAAC,CAAE,IAAI,CAAC,cAAe,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;QAChE,CAAC;IACH,CAAC;IAWD,sCAAO,GAAP,UAAS,KAAU;QACjB,EAAE,CAAC,CAAE,IAAI,CAAC,cAAe,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IACH,2BAAC;AAAD,CAAC,AAtBD,CAA0C,aAAa,GAsBtD;AAdW;IAAT,MAAM,EAAE;;sDAAoC;AARlC,oBAAoB;IAvBhC,SAAS,CAAE;QACV,QAAQ,EAAE,cAAc;QACxB,SAAS,EAAE,CAAC,yBAAyB,CAAC;QACtC,QAAQ,EAAE,q4BAkBT;KACF,CAAE;;GACU,oBAAoB,CAsBhC;SAtBY,oBAAoB","sourcesContent":["import { AfterContentInit, Component, EventEmitter, Output } from '@angular/core';\n\nimport { DefaultEditor } from './default-editor';\n\n@Component( {\n  selector: 'input-editor',\n  styleUrls: ['./editor.component.scss'],\n  template: `\n    <input *ngIf=\"cell.isEditable()\" [ngClass]=\"inputClass\"\n           class=\"form-control\"\n           [(ngModel)]=\"cell.newValue\"\n           [name]=\"cell.getId()\"\n           [placeholder]=\"cell.getTitle()\"\n           [disabled]=\"!cell.isEditable()\"\n           (click)=\"onClick.emit($event)\"\n           (keydown.enter)=\"onEdited.emit($event)\"\n           (keydown.esc)=\"onStopEditing.emit()\"\n           (change)=\"onChange.emit($event)\"\n           (keyup)=\"onKeyup($event)\">\n    <!-- just use regular view logic when cell is not editable-->\n    <div *ngIf=\"!cell.isEditable()\" [ngSwitch]=\"cell.getColumn().type\">\n      <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\n      <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\n      <div *ngSwitchDefault>{{ cell.getValue() }}</div>\n    </div>\n  `,\n} )\nexport class InputEditorComponent extends DefaultEditor implements AfterContentInit {\n  ngAfterContentInit(): void {\n    this.formatFunction = this.cell.getColumn().getInputFormatFunction();\n    if ( this.formatFunction ) {\n      this.cell.setValue(this.formatFunction(this.cell.getValue()));\n    }\n  }\n\n  @Output() onChange = new EventEmitter<any>();\n\n  formatFunction: Function;\n\n  constructor() {\n    super();\n\n  }\n\n  onKeyup( event: any ) {\n    if ( this.formatFunction ) {\n      this.cell.setValue(this.formatFunction(event.currentTarget.value));\n    }\n  }\n}\n"]}