{"version":3,"file":"custom.component.js","sourceRoot":"","sources":["../../../../../src/ng2-smart-table/components/tbody/cells/custom.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAC4B,uBAAuB,EAAE,SAAS,EAAE,YAAY,EAAE,KAAK,EACxF,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,GAAG,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAuBzC,IAAa,oBAAoB;IArBjC;QAqCY,WAAM,GAAG,IAAI,YAAY,EAAO,CAAC;QAE3C,iBAAY,GAAQ,EAAE,CAAC;IAiCzB,CAAC;IAlDC,iDAAkB,GAAlB;QAAA,iBAUC;QATC,2DAA2D;QAC3D,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,gBAAgB,CAAE,CAAC;QAC/D,EAAE,CAAC,CAAE,aAAa,IAAI,aAAa,CAAC,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;YAChD,aAAa,CAAC,OAAO,CAAE,UAAE,CAAM;gBAC7B,EAAE,CAAC,CAAE,CAAC,CAAC,gBAAiB,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,KAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;gBACrF,CAAC;YACH,CAAC,CAAE,CAAC;QACN,CAAC;IACH,CAAC;IASD,uCAAQ,GAAR,UAAU,MAAW;QACnB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE;YAChB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;YACxB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC;SAC7C,CAAE,CAAC;IACN,CAAC;IAED,uCAAQ,GAAR,UAAU,MAAW,EAAE,KAAU;QAC/B,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAE;YAChB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE;YACxB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAE,CAAC;IACN,CAAC;IAED,gDAAiB,GAAjB,UAAmB,MAAW;QAC5B,EAAE,CAAC,CAAE,MAAM,CAAC,YAAY,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,UAAW,CAAC,CAAC,CAAC;YACvE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAE,IAAI,CAAC,GAAG,CAAE,CAAC;QACzC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAEH,2BAAC;AAAD,CAAC,AAnDD,IAmDC;AAtCU;IAAR,KAAK,EAAE;8BAAO,IAAI;kDAAC;AACX;IAAR,KAAK,EAAE;8BAAM,GAAG;iDAAC;AACT;IAAR,KAAK,EAAE;;oDAAa;AACX;IAAT,MAAM,EAAE;;oDAAkC;AAhBhC,oBAAoB;IArBhC,SAAS,CAAE;QACV,QAAQ,EAAE,qBAAqB;QAC/B,eAAe,EAAE,uBAAuB,CAAC,MAAM;QAC/C,QAAQ,EAAE,6vBAgBT;KACF,CAAE;GACU,oBAAoB,CAmDhC;SAnDY,oBAAoB","sourcesContent":["import {\n  AfterContentInit, AfterViewInit, ChangeDetectionStrategy, Component, EventEmitter, Input,\n  Output,\n} from '@angular/core';\nimport { Row } from '../../../lib/data-set/row';\n\nimport { Grid } from '../../../lib/grid';\n\n@Component( {\n  selector: 'ng2-st-tbody-custom',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div *ngFor=\"let action of grid.getSetting('actions.custom')\" [ngSwitch]=\"action.type\">\n      <div *ngIf=\"checkShowFunction(action)\">\n        <div *ngSwitchCase=\"'select'\"\n             class=\"ng2-smart-action ng2-smart-action-custom-custom\">\n          <select [(ngModel)]=\"selectedItem[action.name]\" required (change)=\"onSelect(action)\">\n            <option *ngFor=\"let item of action.optionItems\" [ngValue]=\"item.value\">{{item.description}}</option>\n          </select>\n        </div>\n        <a *ngSwitchDefault\n           [innerHTML]=\"action.title\"\n           class=\"ng2-smart-action ng2-smart-action-custom-custom\"\n           href=\"#\"\n           (click)=\"onCustom(action, $event)\"></a>\n      </div>\n    </div>\n  `,\n} )\nexport class TbodyCustomComponent implements AfterContentInit {\n  ngAfterContentInit(): void {\n    // console.log( 'setting up select action default values');\n    const customActions = this.grid.getSetting( 'actions.custom' );\n    if ( customActions && customActions.length > 0 ) {\n      customActions.forEach( ( a: any ) => {\n        if ( a.defaultSelection ) {\n          this.selectedItem[a.name] = this.row.getData()[a.name] || a.defaultSelection.value;\n        }\n      } );\n    }\n  }\n\n  @Input() grid: Grid;\n  @Input() row: Row;\n  @Input() source: any;\n  @Output() custom = new EventEmitter<any>();\n\n  selectedItem: any = {};\n\n  onSelect( action: any ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.custom.emit( {\n      action: action,\n      data: this.row.getData(),\n      source: this.source,\n      selectedItem: this.selectedItem[action.name],\n    } );\n  }\n\n  onCustom( action: any, event: any ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.custom.emit( {\n      action: action,\n      data: this.row.getData(),\n      source: this.source,\n    } );\n  }\n\n  checkShowFunction( action: any ) {\n    if ( action.showFunction && typeof action.showFunction === 'function' ) {\n      return action.showFunction( this.row );\n    } else {\n      return true;\n    }\n  }\n\n}\n"]}